{"version":3,"sources":["../src/index.js"],"names":["Object","prototype","hasOwnProperty","call","process","env","console","log","$","set","dest","path","resolve","S3_TMP_UPLOAD_DIRETORY","storage","s3","aws","S3","bucket","S3_BUCKET_NAME","contentType","multerS3","AUTO_CONTENT_TYPE","acl","key","req","file","cb","crypto","randomBytes","err","hash","hashHex","toString","fileName","substring","originalname","limits","fileSize","e","message"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;0EAEe;AAAA;AAAA;AAAA;AAAA;AACX,wBAAG;AACC,4BAAG,CAACA,OAAOC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCC,QAAQC,GAA7C,EAAkD,wBAAlD,CAAJ,EAAgF;AAC5E;AACAC,oCAAQC,GAAR,CAAY,wEAAZ;AACH,yBAHD,MAIK,IAAG,CAACP,OAAOC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCC,QAAQC,GAA7C,EAAkD,gBAAlD,CAAJ,EAAwE;AACzE;AACAC,oCAAQC,GAAR,CAAY,gEAAZ;AACH,yBAHI,MAIA,IAAG,CAACP,OAAOC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCC,QAAQC,GAA7C,EAAkD,mBAAlD,CAAJ,EAA2E;AAC5E;AACAC,oCAAQC,GAAR,CAAY,mEAAZ;AACH,yBAHI,MAIA,IAAG,CAACP,OAAOC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCC,QAAQC,GAA7C,EAAkD,uBAAlD,CAAJ,EAA+E;AAChF;AACAC,oCAAQC,GAAR,CAAY,uEAAZ;AACH,yBAHI,MAIA,IAAG,CAACP,OAAOC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCC,QAAQC,GAA7C,EAAkD,oBAAlD,CAAJ,EAA4E;AAC7E;AACAC,oCAAQC,GAAR,CAAY,oEAAZ;AACH,yBAHI,MAID;AACAC,qCAAEC,GAAF,CAAM,IAAN,EAAY,sBAAO;AACfC,sCAAMC,eAAKC,OAAL,CAAaR,QAAQC,GAAR,CAAYQ,sBAAzB,CADS;AAEfC,yCAAS,uBAAS;AACdC,wCAAI,IAAIC,iBAAIC,EAAR,EADU;AAEdC,4CAAQd,QAAQC,GAAR,CAAYc,cAFN;AAGdC,iDAAaC,kBAASC,iBAHR;AAIdC,yCAAK,aAJS;AAKdC,yCAAK,aAACC,GAAD,EAAMC,IAAN,EAAYC,EAAZ,EAAmB;AACpBC,yDAAOC,WAAP,CAAmB,EAAnB,EAAuB,UAACC,GAAD,EAAMC,IAAN,EAAe;AAClC,gDAAID,GAAJ,EAASH,GAAGG,GAAH,EAAT,KACI;AACA,oDAAME,UAAUD,KAAKE,QAAL,CAAc,KAAd,CAAhB;AACA,oDAAMC,WAAcF,QAAQG,SAAR,CAAkB,CAAlB,EAAqB,CAArB,CAAd,SAAyCH,QAAQG,SAAR,CAAkB,CAAlB,EAAqB,CAArB,CAAzC,SAAoEH,QAAQG,SAAR,CAAkB,CAAlB,EAAqB,CAArB,CAApE,SAA+FH,QAAQG,SAAR,CAAkB,CAAlB,EAAqB,EAArB,CAA/F,SAA2HH,QAAQG,SAAR,CAAkB,EAAlB,EAAsB,EAAtB,CAA3H,SAAwJT,KAAKU,YAAnK;AACAT,mDAAG,IAAH,EAASO,QAAT;AACH;AACJ,yCAPD;AAQH;AAda,iCAAT,CAFM;AAkBfG,wCAAQ;AACJC,8CAAU,IAAI,IAAJ,GAAW;AADjB;AAlBO,6BAAP,CAAZ;AAsBH;AACJ,qBA7CD,CA8CA,OAAMC,CAAN,EAAQ;AACJ;AACAjC,gCAAQC,GAAR,eAAwBgC,EAAEC,OAA1B;AACH;;AAlDU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C","file":"index.js","sourcesContent":["import multer from \"multer\";\r\nimport path from \"path\";\r\nimport crypto from \"crypto\";\r\nimport aws from \"aws-sdk\";\r\nimport multerS3 from \"multer-s3\";\r\n\r\nimport { $ } from \"@dekproject/scope\";\r\n\r\nexport default async () => {\r\n    try{\r\n        if(!Object.prototype.hasOwnProperty.call(process.env, \"S3_TMP_UPLOAD_DIRETORY\")){\r\n            // eslint-disable-next-line no-console\r\n            console.log(\"[ S3 ] - There is no S3_TMP_UPLOAD_DIRETORY variable in the .env file.\");\r\n        }\r\n        else if(!Object.prototype.hasOwnProperty.call(process.env, \"S3_BUCKET_NAME\")){\r\n            // eslint-disable-next-line no-console\r\n            console.log(\"[ S3 ] - There is no S3_BUCKET_NAME variable in the .env file.\");\r\n        }\r\n        else if(!Object.prototype.hasOwnProperty.call(process.env, \"AWS_ACCESS_KEY_ID\")){\r\n            // eslint-disable-next-line no-console\r\n            console.log(\"[ S3 ] - There is no AWS_ACCESS_KEY_ID variable in the .env file.\");\r\n        }\r\n        else if(!Object.prototype.hasOwnProperty.call(process.env, \"AWS_SECRET_ACCESS_KEY\")){\r\n            // eslint-disable-next-line no-console\r\n            console.log(\"[ S3 ] - There is no AWS_SECRET_ACCESS_KEY variable in the .env file.\");\r\n        }\r\n        else if(!Object.prototype.hasOwnProperty.call(process.env, \"AWS_DEFAULT_REGION\")){\r\n            // eslint-disable-next-line no-console\r\n            console.log(\"[ S3 ] - There is no AWS_DEFAULT_REGION variable in the .env file.\");\r\n        }\r\n        else{\r\n            $.set(\"s3\", multer({\r\n                dest: path.resolve(process.env.S3_TMP_UPLOAD_DIRETORY),\r\n                storage: multerS3({\r\n                    s3: new aws.S3(),\r\n                    bucket: process.env.S3_BUCKET_NAME,\r\n                    contentType: multerS3.AUTO_CONTENT_TYPE,\r\n                    acl: \"public-read\",\r\n                    key: (req, file, cb) => {\r\n                        crypto.randomBytes(16, (err, hash) => {\r\n                            if (err) cb(err);\r\n                            else{\r\n                                const hashHex = hash.toString(\"hex\");\r\n                                const fileName = `${hashHex.substring(0, 2)}/${hashHex.substring(2, 5)}/${hashHex.substring(5, 9)}/${hashHex.substring(9, 14)}/${hashHex.substring(14, 20)}/${file.originalname}`;\r\n                                cb(null, fileName);\r\n                            }\r\n                        });\r\n                    }\r\n                }),\r\n                limits: {\r\n                    fileSize: 5 * 1024 * 1024\r\n                }\r\n            }));\r\n        }\r\n    }\r\n    catch(e){\r\n        // eslint-disable-next-line no-console\r\n        console.log(`[ S3 ] - ${e.message}`);\r\n    }\r\n};\r\n"]}